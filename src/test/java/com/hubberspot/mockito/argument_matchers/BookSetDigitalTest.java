// ********RoostGPT********
/*
Test generated by RoostGPT for test test-workflow using AI Type Azure Open AI and AI Model roostgpt-4-32k
ROOST_METHOD_HASH=setDigital_952718b46e
ROOST_METHOD_SIG_HASH=setDigital_e5b0a1545f
"""
Scenario 1: Test to verify the scenario when isDigital is set to true
Details:
  TestName: testSetDigitalToTrue
  Description: This test is intended to verify if the flag isDigital is getting successfully set to true when the setDigital method is invoked with parameter as true.
Execution:
  Arrange: Create an instance of the book.
  Act: Call the setDigital method by passing true as a parameter.
  Assert: Assert that the isDigital field of the book instance equals true.
Validation:
  This assertion aims to verify that the flag isDigital can be successfully set to true. The expected result is that the isDigital field of book instance holds the value of true after the setDigital method is invoked. This test is significant as it verifies the basic functionality of the setDigital method.
Scenario 2: Test to check when isDigital is set to false
Details:
  TestName: testSetDigitalToFalse
  Description: This test will check if isDigital can be successfully set to false when the setDigital method is used with false as a parameter.
Execution:
  Arrange: Initialize an instance of the book.
  Act: Invoke the setDigital method by passing false as argument.
  Assert: Make sure that the isDigital field of the book instance is false.
Validation:
  The aim of this assertion is to confirm that the flag isDigital can be successfully set to false. The predicted outcome is that when the setDigital method is called, the isDigital value of the book instance will be false. This test is important because it confirms the correct functionality of the setDigital method.

Scenario 3: Test the default value of isDigital
Details:
  TestName: testDefaultIsDigital
  Description: This test will validate if the default value of isDigital is false.
Execution:
  Arrange: Instantiate a book.
  Act: None.
  Assert: Assert that the isDigital value of the book instance holds false.
Validation:
  This assertion aims to verify that the default value of isDigital is false. We expect the isDigital field to be false as it has not been set and hence it should hold the default value . This test is significant as it validates the default value of isDigital.
"""
*/
// ********RoostGPT********
package com.hubberspot.mockito.argument_matchers;

import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;
import java.time.LocalDate;
import java.util.Objects;
import org.junit.jupiter.api.*;

@Tag("com.hubberspot.mockito.argument_matchers")
@Tag("com.hubberspot.mockito.argument_matchers.setDigital")
@Tag("roostTest1")
@Tag("roostTest2")
class BookSetDigitalTest {

	@Test
	public void testSetDigitalToTrue() {
		// Arrange
		Book book = new Book();
		// Act
		book.setDigital(true);
		// Assert
		assertEquals(true, book.isDigital());
	}

	@Test
	public void testSetDigitalToFalse() {
		// Arrange
		Book book = new Book();
		// Act
		book.setDigital(false);
		// Assert
		assertEquals(false, book.isDigital());
	}

	@Test
	public void testDefaultIsDigital() {
		// Arrange
		Book book = new Book();
		// Assert
		assertEquals(false, book.isDigital());
	}

}